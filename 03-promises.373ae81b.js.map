{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAKA,SAASC,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,UAAEH,QAAUC,IAEpBG,EAAO,UAAEJ,QAAUC,MAEpBA,MAXQO,SAASC,cAAc,SAgB/BC,iBAAiB,UAYxB,SAAqBC,GACnBA,EAAMC,iBACN,MAAMC,EAZR,SAAuBC,GACrB,MAAMC,EAAW,GACjB,IAAK,IAAIC,KAASF,EAAKG,SACjBD,EAAME,aAAa,UACrBH,EAASC,EAAME,aAAa,SAAWC,SAASH,EAAMI,QAG1D,OAAOL,EAKaM,CAAcV,EAAMW,QACxC,IAAIC,EAAQV,EAAmB,MAC/B,IAAK,IAAIW,EAAI,EAAGA,GAAKX,EAAoB,OAAGW,GAAK,EAC/CzB,EAAcyB,EAAGD,GACdE,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA6B,OAAOC,QAAQ,uBAAqB3B,QAAiBC,UAEtD2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA6B,OAAOG,QAAQ,sBAAoB7B,QAAeC,UAEtDsB,GAASV,EAAkB","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst formEl = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nformEl.addEventListener('submit', sumbmitForm);\n\nfunction collectInputs(form) {\n  const inputObj = {};\n  for (let input of form.elements) {\n    if (input.getAttribute('name')) {\n      inputObj[input.getAttribute('name')] = parseInt(input.value);\n    }\n  }\n  return inputObj;\n}\n\nfunction sumbmitForm(event) {\n  event.preventDefault();\n  const inputValues = collectInputs(event.target);\n  let delay = inputValues['delay'];\n  for (let i = 1; i <= inputValues['amount']; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += inputValues['step'];\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","inputValues","form","inputObj","input","elements","getAttribute","parseInt","value","$47d4ff9957288465$var$collectInputs","target","delay1","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.373ae81b.js.map"}