{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAKA,SAASC,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,SAAAA,EAAUC,MAAAA,IAEpBG,EAAO,CAAEJ,SAAAA,EAAUC,MAAAA,MAEpBA,MAXQO,SAASC,cAAc,SAgB/BC,iBAAiB,UAYxB,SAAqBC,GACnBA,EAAMC,iBAGN,IAFA,IAAMC,EAZR,SAAuBC,GACrB,IAAMC,EAAW,GACZC,GAAS,EAATC,GAAS,EAATC,OAASC,MAAd,IAAA,IAAKC,EAAAC,EAAaP,EAAKQ,SAAQC,OAAAC,cAA1BR,GAAAI,EAAAC,EAASI,QAAAC,MAATV,GAAS,EAAA,CAAT,IAAIW,EAAJP,EAASQ,MACRD,EAAME,aAAa,UACrBd,EAASY,EAAME,aAAa,SAAWC,SAASH,EAAMC,kBAFrDX,GAAS,EAATC,EAASa,cAATf,GAAS,MAATK,EAASW,QAATX,EAASW,oBAATf,QAAAC,GAKL,OAAOH,EAKakB,CAActB,EAAMuB,QACpCC,EAAQtB,EAAmB,MACtBuB,EAAI,EAAGA,GAAKvB,EAAoB,OAAGuB,GAAK,EAC/CrC,EAAcqC,EAAGD,GACdE,MAAK,SAAAC,OAAGtC,EAAQsC,EAARtC,SAAUC,EAAKqC,EAALrC,MACjBJ,EAAA0C,OAAOC,QAAS,uBAAuCC,OAAfzC,EAAS,QAAYyC,OAANxC,EAAM,UAE9DyC,OAAM,SAAAJ,OAAGtC,EAAQsC,EAARtC,SAAUC,EAAKqC,EAALrC,MAClBJ,EAAA0C,OAAOI,QAAS,sBAAoCF,OAAfzC,EAAS,QAAYyC,OAANxC,EAAM,UAE9DkC,GAAStB,EAAkB","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nconst formEl = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nformEl.addEventListener('submit', sumbmitForm);\n\nfunction collectInputs(form) {\n  const inputObj = {};\n  for (let input of form.elements) {\n    if (input.getAttribute('name')) {\n      inputObj[input.getAttribute('name')] = parseInt(input.value);\n    }\n  }\n  return inputObj;\n}\n\nfunction sumbmitForm(event) {\n  event.preventDefault();\n  const inputValues = collectInputs(event.target);\n  let delay = inputValues['delay'];\n  for (let i = 1; i <= inputValues['amount']; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += inputValues['step'];\n  }\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","inputValues","form","inputObj","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","elements","Symbol","iterator","next","done","input","value","getAttribute","parseInt","err","return","$ce04d3a99e08e73b$var$collectInputs","target","delay1","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.a236aa02.js.map"}